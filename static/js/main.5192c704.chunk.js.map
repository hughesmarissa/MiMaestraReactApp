{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","category","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5192c704.chunk.js","sourcesContent":["import React,  { useState, useRef, useEffect } from 'react';\r\n\r\nexport default function Flashcard({ flashcard }) {\r\n    const [flip, setFlip] = useState(false);\r\n    const [height, setHeight] = useState('initial');\r\n\r\n    const frontEl = useRef();\r\n    const backEl = useRef();\r\n    \r\n    function setMaxHeight() {\r\n        const frontHeight = frontEl.current.getBoundingClientRect().height;\r\n        const backHeight = backEl.current.getBoundingClientRect().height;\r\n        setHeight(Math.max(frontHeight, backHeight, 100));\r\n    }\r\n\r\n    useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options]);\r\n    useEffect(() => {\r\n        window.addEventListener('resize', setMaxHeight)\r\n        return () => window.removeEventListener('resize', setMaxHeight)\r\n    }, [])\r\n\r\n    return (\r\n        <div \r\n            className={`card ${flip ? 'flip' : ''}`}\r\n            style={{ height: height }}\r\n            onClick={() => setFlip(!flip)}    \r\n        >\r\n            <div className='front' ref={frontEl}>\r\n                {flashcard.question}\r\n                <div className='flashcard-options'>\r\n                    {flashcard.options.map(option => {\r\n                        return <div className='flashcard-option' key={option}>{option}</div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className='back' ref={backEl}>{flashcard.answer}</div>\r\n            {/* {flip ? flashcard.question : flashcard.answer} */}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Flashcard from './Flashcard';\r\n\r\nexport default function FlashcardList({ flashcards }) {\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {flashcards.map(flashcard => {\r\n                return <Flashcard flashcard={flashcard} key={flashcard.id} />\r\n            })}    \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport './app.css';\n\n// api import \nimport axios from 'axios';\n\n\nfunction App() {\n    const [flashcards, setFlashcards] = useState([]);\n    const [categories, setCategories] = useState([]);\n    \n    const categoryEl = useRef();\n    const amountEl = useRef();\n\n    useEffect(() => { //for Catergories\n        axios\n        .get('https://opentdb.com/api_category.php')\n        .then(res => {\n            setCategories(res.data.trivia_categories);\n        })        \n    }, []);\n\n    \n\n    function decodeString(str) {\n        const textArea = document.createElement('textarea');\n        textArea.innerHTML = str\n        return textArea.value;\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        axios\n        .get('https://opentdb.com/api.php', {\n            params: {\n                amount: amountEl.current.value\n            }\n        })\n        .then(res => {\n            setFlashcards(res.data.results.map((questionItem, index) => {\n                const answer = decodeString(questionItem.correct_answer);\n                const options = [\n                    ...questionItem.incorrect_answers.map(a => decodeString(a)), \n                    answer\n                ]\n                return {\n                    id: `${index}-${Date.now()}`,\n                    question: decodeString(questionItem.question),\n                    answer: questionItem.correct_answer,\n                    options: options.sort(() => Math.random() - .5)\n                }\n            }))\n        })\n    }\n\n    return (\n        <>\n            <form className=\"header\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"category\">Category</label>\n                    <select id=\"category\" ref={categoryEl}>\n                        {categories.map(category => {\n                            return <option value=\"category.id\" key={category.id}>{category.name}</option>\n                        })}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"amount\">Number of Questions</label>\n                    <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn\">Generate</button>\n                </div>\n            </form>\n            <div className='container'>\n                <FlashcardList flashcards={flashcards} />\n            </div>\n        </>\n    );\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}